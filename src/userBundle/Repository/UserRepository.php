<?php

namespace userBundle\Repository;


/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{public function reservationaccepte()
{
    $query = $this->getEntityManager()->createQuery("SELECT u FROM userBundle:Reservation u WHERE u.status=:x")
        ->setParameter('x', 'acceptÃ©');;
    return $query->getResult();
}

    public function ouvrierdisponible($role)
    {
        $query = $this->getEntityManager()->createQuery("SELECT u FROM userBundle:User u WHERE u.disponibilite=:x and u.roles=:role")
            ->setParameter('x', 'disponible')
            ->setParameter('role', $role);
        return $query->getResult();
    }

    public function reservation()
    {
        $query = $this->getEntityManager()->createQuery("SELECT u FROM userBundle:Reservation u WHERE  u.User=:x")
            ->setParameter('x', 'nom');
        return $query->getResult();
    }


    public function findhimDQL($amine){

        $query=$this->getEntityManager()->createQuery("SELECT m from userBundle:Reclamation m WHERE m.idsource=:amine")
            ->setParameter('amine',$amine);

        return $query->getResult();
    }
    public function findTitle($title)
    {
        $q=$this->createQueryBuilder('m')
            ->where('m.title LIKE :title')
            ->setParameter(':title',"%$title%");
        return $q->getQuery()->getResult();
    }
    public function findMulti($find)
    {
        $q=$this->createQueryBuilder('m')
            ->where('m.title LIKE :find')->orWhere('m.body LIKE :find')->orWhere('m.description LIKE :find')
            ->setParameter(':find',"%$find%");
        return $q->getQuery()->getResult();
    }
    public function findAdmin(){

        $query=$this->getEntityManager()->createQuery("SELECT m from userBundle:Reclamation m WHERE m.destinationReclamation=:amine")
            ->setParameter('amine',"Admin");

        return $query->getResult();
    }
    public function findPrestataire(){

        $query=$this->getEntityManager()->createQuery("SELECT m from userBundle:Reclamation m WHERE m.destinationReclamation=:amine")
            ->setParameter('amine',"Prestataire");

        return $query->getResult();
    }

    public function findPrest(){

        $query=$this->getEntityManager()->createQuery("SELECT u from userBundle:User u WHERE u.role=:amine")
            ->setParameter('amine',"Ouvrier");

        return $query->getResult();
    }


    public function findher($ss){

        $query=$this->getEntityManager()->createQuery("SELECT u from userBundle:Reclamation u WHERE u.destinationReclamation=:amine")
            ->setParameter('amine',$ss);

        return $query->getResult();
    }

    public function findAveRecu($nb){
        $query=$this->getEntityManager()->createQuery("SELECT m from userBundle:Avertissement m WHERE m.destinationAvertissement=:nb")
            ->setParameter('nb',$nb);

        return $query->getResult();
    }


    public function findbyRole($role){
        $query=$this->getEntityManager()->createQuery("SELECT u from userBundle:User u WHERE u.roles=:role")
            ->setParameter('role',$role);
        return $query->getResult();
    }
    public function trouverLivreur($x){
        $query=$this->getEntityManager()->createQuery("SELECT u FROM userBundle:User u WHERE u.adresse=:x")
            ->setParameter('x',$x);
        return $query->getResult();
    }
    public function findLivraison($id){
        $query=$this->getEntityManager()->createQuery("SELECT u FROM userBundle:Livraison u WHERE u.idLivraison=:id")
            ->setParameter('id',$id);
        return $query->getResult();
    }

}
